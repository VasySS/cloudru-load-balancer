services:
  postgres:
    container_name: balancer-postgres
    image: postgres:17-alpine3.21@sha256:7062a2109c4b51f3c792c7ea01e83ed12ef9a980886e3b3d380a7d2e5f6ce3f5
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_DB: ${PG_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${PG_USER} -d ${PG_DB}'"]
    volumes:
      - "balancer-postgres-data:/var/lib/postgresql/data"
    networks:
      - balancer-network

  dummy1:
    container_name: balancer-dummy-backend1
    build:
      context: ./dummy
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
    networks:
      - balancer-network

  dummy2:
    container_name: balancer-dummy-backend2
    build:
      context: ./dummy
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - MODE=slow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
    networks:
      - balancer-network

  balancer:
    container_name: balancer
    build: .
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - PG_HOST=postgres
      - PG_DB=${PG_DB}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    networks:
      - balancer-network
    depends_on:
      postgres:
        condition: service_healthy

networks:
  balancer-network:

volumes:
  balancer-postgres-data:
    driver: local
